<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ezen.seller.SellerMapper">
	<select id="getSeller" resultType="com.ezen.seller.SellerVO" parameterType="Integer">
	SELECT sellernum, officeName, sellerName, offRegiNum, officeAdd, busnessNum, busnessOcc, busnessCate, officeEmail, officePhone, officeFax, adminId, adminpass, sellerNick, picName, picEmail, pictel, csPhone  
		FROM Seller 
		WHERE sellernum=#{sellernum} 
	</select>
	<update id="update"
		parameterType="com.ezen.seller.SellerVO">
		    UPDATE Seller 
    SET officeName=#{officeName}, sellerName=#{sellerName}, offRegiNum=#{offRegiNum}, officeAdd=#{officeAdd},
        busnessNum=#{busnessNum}, busnessOcc=#{busnessOcc}, busnessCate=#{busnessCate},
        officeEmail=#{officeEmail}, officePhone=#{officePhone}, officeFax=#{officeFax},
        sellerNick=#{sellerNick}, picName=#{picName}, picEmail=#{picEmail}, pictel=#{pictel}, csPhone=#{csPhone} 
    WHERE sellernum=#{sellernum}
	</update>
	<update id="pwdChange"
		parameterType="com.ezen.seller.SellerVO">
		    UPDATE Seller SET adminpass=#{adminpass} WHERE sellernum=#{sellernum}
	</update>
	<insert id="lastRequest" parameterType="com.ezen.seller.withdrawalform">
		INSERT INTO withdrawalform VALUES(NULL, #{adminId}, #{adminpass}, #{withres}, #{opinion} )
	</insert>
	<update id="withdrawal" parameterType="com.ezen.seller.SellerVO">
		update seller set sstatus='wthdr' where sellernum=#{sellernum}
	</update>
	
	<select id="orderList" 
			parameterType="Integer"
			resultType="Map">
			select *
			from (SELECT o.num, o.orderNo, o.memberNo, o.goodsNo, g.GoodsName, o.goodsSalePrice, o.goodsSaleQty, o.orderRegistryDay, o.orderStatus
					FROM orderlist o left outer join goods g 
					  on o.goodsNo = g.Goodsno
					where o.sellerNo = #{sellerno}
				) d left outer join member_main m
			  on d.memberNo = m.mnum
			  <!-- 테이블 3개를 가지고 온 값임. 주문정보에 다른 모든 정보도 처리해야하므로... 오더리스트(orderlist)랑 상품테이블(goods)이랑 멤버테이블(member_main) -->
	</select>
	<update id="changeStatus" parameterType="com.ezen.goods.OrderVO">
		update orderlist set orderstatus=#{orderStatus} where orderNo=#{orderNo}
	</update>
	<update id="shipinfo"
		parameterType="com.ezen.goods.OrderVO">
		    UPDATE orderlist 
		    SET postname=#{postname}, shippingcode=#{shippingcode}
		    WHERE num=#{orderNo}
	</update>
	
	<select id="getOrderStatus"
			parameterType="com.ezen.goods.OrderVO"
			resultType="String">
			select orderStatus FROM orderlist where orderNo=#{orderNo}
	</select>
	
	<select id="beforeStlmn" 
			parameterType="Integer"
			resultType="Map">
			select *
			from (SELECT o.num, o.orderNo, o.memberNo, o.goodsNo, g.GoodsName, o.goodsSalePrice, o.goodsSaleQty, o.orderRegistryDay, o.orderStatus
					FROM orderlist o left outer join goods g 
					  on o.goodsNo = g.Goodsno
					where o.sellerNo = #{sellerno} AND o.orderStatus = 'purConfirm'
				) d left outer join member_main m
			  on d.memberNo = m.mnum
	</select>
	
	<select id="incomelist" 
			parameterType="Integer"
			resultType="Map">
			select *
			from (SELECT o.num, o.orderNo, o.memberNo, o.goodsNo, g.GoodsName, o.goodsSalePrice, o.goodsSaleQty, o.orderRegistryDay, o.orderStatus
					FROM orderlist o left outer join goods g 
					  on o.goodsNo = g.Goodsno
					where o.sellerNo = #{sellerno} AND o.orderStatus = 'purConfirm'
				) d left outer join member_main m
			  on d.memberNo = m.mnum
			  </select>
	
	<select id="incomelistSearchOrderNo" 
			parameterType="Map"
			resultType="Map">
			select *
			from (SELECT o.num, o.orderNo, o.memberNo, o.goodsNo, g.GoodsName, o.goodsSalePrice, o.goodsSaleQty, o.orderRegistryDay, o.orderStatus
					FROM orderlist o left outer join goods g 
					  on o.goodsNo = g.Goodsno
					where o.sellerNo = #{sellerno} AND o.orderStatus = 'purConfirm' AND o.orderNo=#{keyword}
					<if test="startdate!=null and enddate!=null">
						<![CDATA[ AND o.orderRegistryDay >= #{startdate} AND o.orderRegistryDay <= #{enddate} ]]>
					</if>
					<if test="startdate != null and enddate == null">
						<![CDATA[ AND o.orderRegistryDay >= #{startdate}}  ]]>
					</if>
					<if test="startdate == null and enddate != null">
						<![CDATA[ AND o.orderRegistryDay <= #{enddate}  ]]>
					</if>
				) d left outer join member_main m
			  on d.memberNo = m.mnum
	</select>
	
	<select id="incomelistSearchGoodsName" 
			parameterType="Map"
			resultType="Map">
			select *
			from (SELECT o.num, o.orderNo, o.memberNo, o.goodsNo, g.GoodsName, o.goodsSalePrice, o.goodsSaleQty, o.orderRegistryDay, o.orderStatus
					FROM orderlist o left outer join goods g 
					  on o.goodsNo = g.Goodsno
					where o.sellerNo = #{sellerno} AND o.orderStatus = 'purConfirm' AND g.goodsName Like CONCAT('%',#{keyword},'%')
					<if test="startdate!=null and enddate!=null">
						<![CDATA[ AND o.orderRegistryDay >= #{startdate} AND o.orderRegistryDay <= #{enddate} ]]>
					</if>
					<if test="startdate != null and enddate == null">
						<![CDATA[ AND o.orderRegistryDay >= #{startdate}}  ]]>
					</if>
					<if test="startdate == null and enddate != null">
						<![CDATA[ AND o.orderRegistryDay <= #{enddate}  ]]>
					</if>
				) d left outer join member_main m on d.memberNo = m.mnum
	</select>

	<select id="incomelistSearchMid" 
			parameterType="Map"
			resultType="Map">
			  SELECT * FROM (
					    SELECT o.num, o.orderNo, o.memberNo, o.goodsNo, g.GoodsName, o.goodsSalePrice, o.goodsSaleQty, o.orderRegistryDay, o.orderStatus
					    FROM orderlist o
					    LEFT OUTER JOIN goods g ON o.goodsNo = g.Goodsno
					    WHERE o.sellerNo = #{sellerno} AND o.orderStatus = 'purConfirm'
					    <if test="startdate!=null and enddate!=null">
							<![CDATA[ AND o.orderRegistryDay >= #{startdate} AND o.orderRegistryDay <= #{enddate} ]]>
						</if>
						<if test="startdate != null and enddate == null">
							<![CDATA[ AND o.orderRegistryDay >= #{startdate}}  ]]>
						</if>
						<if test="startdate == null and enddate != null">
							<![CDATA[ AND o.orderRegistryDay <= #{enddate}  ]]>
						</if>
					) d LEFT OUTER JOIN member_main m ON d.memberNo = m.mnum
					WHERE m.mid = #{keyword}
	</select>

</mapper> 